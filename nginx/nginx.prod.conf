server {
    listen 80 default_server;
    server_name _;

    location / {
        return 301 https://$host$request_uri;
    }
}

# Default HTTPS for IP access -> Grafana
server {
    listen 443 ssl default_server;
    server_name _;

    ssl_certificate     /certs/server.crt;
    ssl_certificate_key /certs/server.key;
    ssl_trusted_certificate /certs/ca.crt;

    location / {
        proxy_pass http://grafana:3000;
        proxy_set_header Host grafana.internal;  # force Grafana host header
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Grafana (DNS access)
server {
    listen 443 ssl;
    server_name grafana.internal;

    ssl_certificate     /certs/server.crt;
    ssl_certificate_key /certs/server.key;
    ssl_trusted_certificate /certs/ca.crt;

    location / {
        proxy_pass http://grafana:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Loki
server {
    listen 443 ssl;
    server_name loki.internal;
    ssl_certificate     /certs/server.crt;
    ssl_certificate_key /certs/server.key;
    ssl_trusted_certificate /certs/ca.crt;
    
    location / {
        proxy_pass http://loki:3100;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Prometheus
server {
    listen 443 ssl;
    server_name prometheus.internal;
    ssl_certificate     /certs/server.crt;
    ssl_certificate_key /certs/server.key;
    ssl_trusted_certificate /certs/ca.crt;
    
    location / {
        proxy_pass http://prometheus:9090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
