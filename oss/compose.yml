services:  
  postgres_dev:
    image: postgres:16
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: example
      POSTGRES_DB: appdb
    networks: 
      - alloy-net
    command: >
      postgres -c logging_collector=on
               -c log_directory='log'
               -c log_filename='postgresql.log'
               -c log_statement='all'
               -c log_destination='csvlog,stderr'
               -c log_min_messages=info
               -c log_rotation_age=0
               -c log_rotation_size=0
               -c log_truncate_on_rotation=off

  loki:
    image: grafana/loki:3.0.0
    ports:
      - "3100:3100"
    networks: 
      - alloy-net
    volumes:
      - ./loki.yaml:/etc/loki/local-config.yaml
    command: -config.file=/etc/loki/local-config.yaml

  prometheus:
    image: prom/prometheus:v2.47.0
    command:
      - --web.enable-remote-write-receiver
      - --config.file=/etc/prometheus/prometheus.yml
    volumes: 
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus 
    networks: 
      - alloy-net 
    ports:
      - "9090:9090"

  alloy:
    image: grafana/alloy:latest
    container_name: alloy
    volumes:
      - ./config.alloy:/etc/alloy/config.alloy:ro
      - postgres-data:/var/lib/postgresql/data:ro
    command: run /etc/alloy/config.alloy
    networks:
      - alloy-net
    depends_on:
      - loki
      - postgres_dev

  grafana:
    image: grafana/grafana:11.0.0
    ports:
      - "3000:3000"
    networks: 
      - alloy-net
    environment:
      # - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    volumes: 
      - ./grafana/provisioning:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    # entrypoint:
    #   - sh
    #   - -euc
    #   - |
    #    mkdir -p /etc/grafana/provisioning/datasources
    #    cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
    #    apiVersion: 1
    #    datasources:
    #    - name: Loki
    #      type: loki
    #      access: proxy
    #      orgId: 1
    #      url: http://loki:3100
    #      basicAuth: false
    #      isDefault: false
    #      version: 1
    #      editable: false
    #    - name: Prometheus
    #      type: prometheus
    #      orgId: 1
    #      url: http://prometheus:9090
    #      basicAuth: false
    #      isDefault: true
    #      version: 1
    #      editable: false
    #    EOF
    #    /run.sh

volumes:
  postgres-data:
  alloy_data:
  prometheus_data:
  grafana_data:

networks:
  alloy-net:
    driver: bridge
